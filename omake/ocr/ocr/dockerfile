# FROM clearlinux/tesseract-ocr

FROM ubuntu:21.10

# ENV DEBIAN_FRONTEND=noninteractive

ARG python_version="3.7.3"
ARG version="4.2.0"
# https://www.yamamanx.com/ubuntu-docker-build-timezone-stop/

# like tool
RUN apt-get update
ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=Europe/Moscow
RUN apt-get install -y tzdata && \
    apt-get install -y --no-install-recommends \
    vim unzip byobu wget tree git cmake
RUN apt-get install -y zlib1g-dev libssl-dev libffi-dev build-essential \
    checkinstall libncursesw5-dev libssl-dev libsqlite3-dev tk-dev \
    libgdbm-dev libc6-dev libbz2-dev

# install python3
# RUN apt-get update
RUN apt-get install -y python3
RUN apt-get install ca-certificates javascript-common libjs-jquery libjs-sphinxdoc\
    libjs-underscore libpython3-dev libpython3.9-dev openssl python-pip-whl\
    python3-dev python3-distutils python3-lib2to3 python3-pkg-resources\
    python3-setuptools python3-wheel python3.9-dev

RUN apt-get install python3-pip

# RUN wget -c https://www.python.org/ftp/python/${python_version}/Python-${python_version}.tgz &&\
#     tar zxvf Python-${python_version}.tgz && cd Python-${python_version} &&\
#     ./configure --enable-optimizations --enable-shared CFLAGS=-fPIC &&\
#     make -j8 && make install && ldconfig && cd .. && rm Python-${python_version}.tgz &&\
#     rm -rf Python-${python_version}
RUN pip3 install -U pip
RUN pip3 install -U setuptools

# RUN pip3 install -U ttfquery
RUN pip3 install -U font2img


# install opencv
RUN pip3 install -U numpy
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc g++ libpng-dev libjpeg-dev libopenexr-dev libtiff-dev libwebp-dev \
    libgtk-3-dev &&\
    rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*

RUN mkdir /workspace
WORKDIR /workspace

RUN wget -c https://github.com/opencv/opencv/archive/${version}.tar.gz &&\
    tar -zxvf ${version}.tar.gz && rm ${version}.tar.gz
RUN mkdir /workspace/opencv-${version}/build

## opencv_contrib
RUN wget -c https://github.com/opencv/opencv_contrib/archive/${version}.tar.gz &&\
    tar -zxvf ${version}.tar.gz && rm /workspace/${version}.tar.gz
WORKDIR /workspace/opencv-${version}/build

## make opencv
RUN cmake -OPENCV_EXTRA_MODULES_PATH=/workspace/opencv_contrib-${version}/modules ..
RUN make -j8
RUN make install
RUN ldconfig

RUN pip install --upgrade ufo-extractor defcon argparse
RUN pip3 uninstall -y setuptools
RUN pip3 install -U setuptools
RUN pip3 install -U cairosvg
# RUN git clone https://github.com/typesupply/ufo2svg.git
# WORKDIR /workspace/ufo2svg
# RUN python setup.py build
# RUN python3 setup.py install
RUN pip3 install tensorflow
RUN pip3 install matplotlib
RUN pip3 install sklearn

WORKDIR /
RUN rm -rf workspace/


RUN apt-get update && apt install -y software-properties-common
RUN add-apt-repository ppa:alex-p/tesseract-ocr-devel
RUN apt-get update

RUN apt-get install -y tesseract-ocr
RUN apt install python3-pip
RUN pip3 install -U pyocr
# Docker内で
WORKDIR /home